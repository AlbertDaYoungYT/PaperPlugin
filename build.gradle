import com.github.spotbugs.snom.SpotBugsTask
import java.text.SimpleDateFormat

plugins {
    id "com.github.spotbugs" version "6.0.25"
    id 'com.gradleup.shadow' version '8.3.3'
    id 'java'
}

group = "com.albertdayoung.allgamblingandcasino"

static def getTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    return sdf.format(new Date()).toString()
}

// Set version to version property if supplied
String shortVersion = null
if (hasProperty('ver')) {
    if (ver.charAt(0) == "v") {
        shortVersion = ver.substring(1).toUpperCase()
    } else {
        shortVersion = ver.toUpperCase()
    }
}

// If the tag includes "-RC-" or no tag is supplied, append "-SNAPSHOT"
int rcIdx
shortVersion = "1.0.0"
if (shortVersion == null || shortVersion == "") {
    version = getTime() + "-SNAPSHOT"
} else if ((rcIdx = shortVersion.indexOf("-RC-")) != -1) {
    version = shortVersion.substring(0, rcIdx) + "-SNAPSHOT"
} else {
    version = shortVersion
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    maven {
        name 'papermc'
        url 'https://repo.papermc.io/repository/maven-public/'
        content {
            includeModule("io.papermc.paper", "paper-api")
            includeModule("io.papermc", "paperlib")
            includeModule("net.md-5", "bungeecord-chat")
        }
    }

    maven {
        name 'minecraft'
        url 'https://libraries.minecraft.net'
        content {
            includeModule("com.mojang", "brigadier")
        }
    }

    maven { url 'https://jitpack.io' }

    maven {
        url = uri("https://repo.triumphteam.dev/snapshots")
    }

    
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'

        // As of Gradle 5.1, you can limit this to only those
        // dependencies you expect from it
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }

    mavenCentral()
    mavenLocal()
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.6'
    compileOnly 'net.luckperms:api:5.4'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'org.spigotmc:spigot-api:1.21.3-R0.1-SNAPSHOT'
    

    implementation "dev.triumphteam:triumph-gui-paper:4.0.0-SNAPSHOT"
    implementation 'io.papermc:paperlib:1.0.8'
    implementation "net.kyori:adventure-api:4.17.0"
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.13.0'
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.6'
    testImplementation 'io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.11.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.11.3'
}

spotbugs {
    toolVersion = '4.0.2'
    ignoreFailures = true
    showStackTraces = false
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( NAME: rootProject.name, VERSION: version, PACKAGE: project.group.toString() )
    }
}

tasks.withType(SpotBugsTask).configureEach {
    reports.create("html") {
        required = true
    }
    reports.create("xml") {
        required = false
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'io.papermc.lib', 'shadow.io.papermc.paperlib'

    relocate("dev.triumphteam.gui", "com.albertdayoung.allgamblingandcasino.gui")
    minimize()
}


// Disable jar and replace with shadowJar
jar.enabled = false
assemble.dependsOn(shadowJar)

tasks.register('printProjectName') {
    doLast {
        println rootProject.name
    }
}

tasks.register('release') {
    dependsOn build

    doLast {
        if (!version.endsWith("-SNAPSHOT")) {
            // Rename final JAR to trim off version information
            shadowJar.archiveFile.get().getAsFile()
                    .renameTo(layout.buildDirectory.get().toString() + File.separator + 'libs' + File.separator
                            + rootProject.name + '.jar')
        }
    }
}
